// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ErrorPage should match the snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ErrorPage />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <h1>
          404
        </h1>,
        <h2
          className="error"
        >
          The page you requested cannot be found. Please check your address and try again.
        </h2>,
        <NavLink
          activeClassName="active"
          aria-current="page"
          className="home-btn"
          to="/main"
        >
          HOME
        </NavLink>,
      ],
      "className": "error-page",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "404",
        },
        "ref": null,
        "rendered": "404",
        "type": "h1",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "The page you requested cannot be found. Please check your address and try again.",
          "className": "error",
        },
        "ref": null,
        "rendered": "The page you requested cannot be found. Please check your address and try again.",
        "type": "h2",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "activeClassName": "active",
          "aria-current": "page",
          "children": "HOME",
          "className": "home-btn",
          "to": "/main",
        },
        "ref": null,
        "rendered": "HOME",
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <h1>
            404
          </h1>,
          <h2
            className="error"
          >
            The page you requested cannot be found. Please check your address and try again.
          </h2>,
          <NavLink
            activeClassName="active"
            aria-current="page"
            className="home-btn"
            to="/main"
          >
            HOME
          </NavLink>,
        ],
        "className": "error-page",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "404",
          },
          "ref": null,
          "rendered": "404",
          "type": "h1",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "The page you requested cannot be found. Please check your address and try again.",
            "className": "error",
          },
          "ref": null,
          "rendered": "The page you requested cannot be found. Please check your address and try again.",
          "type": "h2",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "activeClassName": "active",
            "aria-current": "page",
            "children": "HOME",
            "className": "home-btn",
            "to": "/main",
          },
          "ref": null,
          "rendered": "HOME",
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
