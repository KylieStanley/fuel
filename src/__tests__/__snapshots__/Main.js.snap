// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Main should match the snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Main
    fetchRecipes={
      [MockFunction] {
        "calls": Array [
          Array [
            "https://api.edamam.com/search?q=ma&app_id=16b95589&app_key=298a32be6ad93c49abf9f146b74966e5&from=0&to=30",
          ],
        ],
        "results": Array [
          Object {
            "isThrow": false,
            "value": undefined,
          },
        ],
      }
    }
    recipes={Array []}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="header-menu"
        >
          <div
            className="main-text"
          >
            <h1
              className="fuel"
            >
              fuel
            </h1>
            <h3>
              Recipes and Nutrition to support your training
            </h3>
          </div>
          <Menu />
        </div>,
        <Connect(Form) />,
        <Connect(CardContainer) />,
      ],
      "className": "main-container",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="main-text"
            >
              <h1
                className="fuel"
              >
                fuel
              </h1>
              <h3>
                Recipes and Nutrition to support your training
              </h3>
            </div>,
            <Menu />,
          ],
          "className": "header-menu",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <h1
                  className="fuel"
                >
                  fuel
                </h1>,
                <h3>
                  Recipes and Nutrition to support your training
                </h3>,
              ],
              "className": "main-text",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "fuel",
                  "className": "fuel",
                },
                "ref": null,
                "rendered": "fuel",
                "type": "h1",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Recipes and Nutrition to support your training",
                },
                "ref": null,
                "rendered": "Recipes and Nutrition to support your training",
                "type": "h3",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="header-menu"
          >
            <div
              className="main-text"
            >
              <h1
                className="fuel"
              >
                fuel
              </h1>
              <h3>
                Recipes and Nutrition to support your training
              </h3>
            </div>
            <Menu />
          </div>,
          <Connect(Form) />,
          <Connect(CardContainer) />,
        ],
        "className": "main-container",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="main-text"
              >
                <h1
                  className="fuel"
                >
                  fuel
                </h1>
                <h3>
                  Recipes and Nutrition to support your training
                </h3>
              </div>,
              <Menu />,
            ],
            "className": "header-menu",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <h1
                    className="fuel"
                  >
                    fuel
                  </h1>,
                  <h3>
                    Recipes and Nutrition to support your training
                  </h3>,
                ],
                "className": "main-text",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "fuel",
                    "className": "fuel",
                  },
                  "ref": null,
                  "rendered": "fuel",
                  "type": "h1",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Recipes and Nutrition to support your training",
                  },
                  "ref": null,
                  "rendered": "Recipes and Nutrition to support your training",
                  "type": "h3",
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
